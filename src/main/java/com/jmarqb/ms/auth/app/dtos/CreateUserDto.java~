package com.jmarqb.ms.auth.app.dtos;

import com.jmarqb.ms.auth.app.enums.Gender;
import com.jmarqb.ms.auth.app.validation.ExistEmail;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Builder
@Data
@AllArgsConstructor
@NoArgsConstructor
public class CreateUserDto {

    @NotBlank
    @Size(min = 3, max = 30, message = "firstName must be between 3 and 30 characters")
    private String firstName;

    @NotBlank
    @Size(min = 3, max = 30, message = "lastName must be between 3 and 30 characters")
    private String lastName;

    @NotBlank
    @Email
    @ExistEmail
    private String email;

    @NotBlank
    @Size(min = 4, max = 50, message = "password must be between 4 and 50 characters")
    private String password;

    @NotBlank
    @Pattern(regexp = "^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$",
            message = "Phone must be a valid phone number")
    private String phone;

    @NotBlank
    @Enumerated(EnumType.STRING)
    private Gender gender;

    @NotBlank
    private String country;

}
